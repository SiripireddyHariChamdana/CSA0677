#include <stdio.h>

// Function to find the peak element using binary search
int findPeakElement(int nums[], int size) {
    int left = 0, right = size - 1;

    while (left < right) {
        int mid = (left + right) / 2;

        // Compare middle element with its right neighbor
        if (nums[mid] < nums[mid + 1]) {
            left = mid + 1;
        } else {
            right = mid;
        }
    }
    return left; // or right, since left == right
}

int main() {
    // Example 1
    int nums1[] = {1, 2, 3, 1};
    int size1 = sizeof(nums1) / sizeof(nums1[0]);
    printf("Example 1:\n");
    printf("Input: nums = [1, 2, 3, 1]\n");
    printf("Output: %d\n", findPeakElement(nums1, size1));

    // Example 2
    int nums2[] = {1, 2, 1, 3, 5, 6, 4};
    int size2 = sizeof(nums2) / sizeof(nums2[0]);
    printf("Example 2:\n");
    printf("Input: nums = [1, 2, 1, 3, 5, 6, 4]\n");
    printf("Output: %d\n", findPeakElement(nums2, size2));

    return 0;
}
