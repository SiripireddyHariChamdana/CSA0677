#include <stdio.h>
int comparisons = 0;

void merge(int arr[], int left, int mid, int right) 
{
    int i, j, k;
    int n1 = mid - left + 1;    
    int n2 = right - mid;       

    int L[n1], R[n2];
    for (i = 0; i < n1; i++)
        L[i] = arr[left + i];
    for (j = 0; j < n2; j++)
        R[j] = arr[mid + 1 + j];
    i = 0;  
    j = 0;  
    k = left; 
    while (i < n1 && j < n2) 
{
        comparisons++; 
        if (L[i] <= R[j])
{
            arr[k] = L[i];
            i++;
        } else {
            arr[k] = R[j];
            j++;
        }
        k++;
    }
    while (i < n1) 
{
        arr[k] = L[i];
        i++;
        k++;
    }
    while (j < n2)
{
        arr[k] = R[j];
        j++;
        k++;
    }
}

void mergeSort(int arr[], int left, int right)
{
    if (left < right)
{
        int mid = left + (right - left) / 2;
        mergeSort(arr, left, mid);
        mergeSort(arr, mid + 1, right);

        merge(arr, left, mid, right);
    }
}

void printArray(int arr[], int size) 
{
    for (int i = 0; i < size; i++)
        printf("%d ", arr[i]);
    printf("\n");
}

int main()
{
    int a1[] = {12, 4, 78, 23, 45, 67, 89, 1};
    int N1 = sizeof(a1) / sizeof(a1[0]);
    comparisons = 0;
    printf("Input: N=%d, a[] = {12,4,78,23,45,67,89,1}\n");
    mergeSort(a1, 0, N1 - 1);
    printf("Output: ");
    printArray(a1, N1);
    printf("Comparisons: %d\n", comparisons);

    int a2[] = {38, 27, 43, 3, 9, 82, 10};
    int N2 = sizeof(a2) / sizeof(a2[0]);
    comparisons = 0;
    printf("Input: N=%d, a[] = {38,27,43,3,9,82,10}\n");
    mergeSort(a2, 0, N2 - 1);
    printf("Output: ");
    printArray(a2, N2);
    printf("Comparisons: %d\n", comparisons);

    return 0;
}
